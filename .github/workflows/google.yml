# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT:  estudogcp-261420 
  GKE_EMAIL: estudogcp-261420@appspot.gserviceaccount.com 
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-a	
  GKE_CLUSTER: apiestudo-82
  IMAGE: apiestudo

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: estudogcp-261420@appspot.gserviceaccount.com 
        service_account_key: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDgjes/ACufXiKU\nWAk2VFzwF7TOo7szBUnAncemkf8PXQfznl0hW1+fnv6RQPccI76pipNvSLMVs2nU\nElXVg4cF1L/3Q4WQHqqHhbrE4+1E49WgY6oveD3SiyDGKIfC4/0JgqaLPw89IR8F\nEHcKFxVWlukTi7qOd4Px6/KprgKDavlkNju+M7/wxdbUKzHu6cjwhC4FtNroIklm\nv2hWhYkFpe7DNb4CPw+oCKGSNc5UTbPnPp7PXwgdhEDV/gj4kjB8z+jQ/+3RWUya\nYnf4NrSPuWrPOEMML3b86jv1fYqeKuXNjEl7tg5AdgvLsTRBcT7vi3etZ6jN8l8l\nNBYn4fb7AgMBAAECggEAGf3uChZOdlLH74zQetSWsgcZxhtnRTdqUIcoKhcsbfj8\n582KW8c++8kZup10R50O6i1LSy51OuClXMdHM9YsGwLZD4QQzIby199PqDpLvKrJ\n5O1JsIHwrKivAVDar2EtaQbm7nznmidLIbkaAPXSt07zfprbXAyTHhMLZ77ntTya\nn/NB2Iglo6Onqj1QATaYYFh0x2agtRIjAEKZeOih72wKYvA7sXZ+MrencIhK+Qaj\nRP23/JY8Y/DNRtMfGjqiYFso0+OdnPDtSmAImOy0Xukg7VVpfULXHYfZxKzBUT3i\nKuWMW3PP3l85E9IXjKntKrm7ikJ7RuaLedvECjeQOQKBgQD0P5bh1FJ34Chip+Jz\n/kdZuCMfNFz0VQ2K79pU26z87H1BPASk1do79aZJ//NulTIwLKblIhqbck8phRwj\nUcvgHVQlvjpo31Mdwimf7ZVKeMWyC23hSIRHQUBMz7/CO9+11u/JBjL/hnfkgTfU\n2bSYUHlKwO0mYvW2byIVIBEOOQKBgQDrW8ILZZSOqltjoRP7OU+pN3Zdb70VBr+4\nqdUsYRw0SVP+PCr8VHN2Tkog/BUXQKivhz3AKD7Z8n3e4vGAf+D1mWRs4Dy2zJpW\nFRLz0/vXUc6ZietwAtIoRJ87W9qjBTfO7lBCLE8JaSjj6c+fmbkLruhML2GouZFH\npYJbc20u0wKBgQDXzCMT7dLbJQqpd6lFUIFbzKwDUvFZ0pe/jIE7fkeNw6g67bsw\no91IIpbERMagimMoWxst0P7vHoTAq2Gb9xYJMgB5xGO46q912GmMao3/mUsaLqzr\nYXW1uvoDo33KL7pM39VFqBuA1h6xnlVk0uCTvm4b1O7yfnaXtALJ5WYMSQKBgH5f\nLWibKVIVDK8JDUaGNkzAt/Bhj+AbWJQZtJl4pwE4Ij5PJjGIUtrCHLFrSRPMJwbg\nkfp8YYr61jT4G/4IK80TiMWg/ViVsYTpGd0MBJxPk6QDVwQ0r4zpk6n2nwWLRrT4\nZuWxDtsZuNfvcgjbLG2mg5pskn5a7TPQHZdm+cf7AoGAVgrs98uBQPAPgE3kj+vv\nsADSAaXdvPtYlNxVnak509lhtx7IEG8RE7k+F7lx0cVyZJ35bz5vHU5muZLxqPTT\n4Sdh/dS2Pwjgi2sAxREAUj8/ZgcUb3PNk+QrPf3/0phabdXk7pxxYb7Ri0WBpvYu\nwveDL/zk2Opp/Ciae+MhKcM=\n-----END PRIVATE KEY-----\n" 

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      run: |        
        docker build -t gcr.io/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        ./kustomize edit set image gcr.io/$GKE_PROJECT/$IMAGE:${GITHUB_SHA}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/gke-test
        kubectl get services -o wide
