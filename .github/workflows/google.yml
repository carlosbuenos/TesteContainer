# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT:  estudogcp-261420 
  GKE_EMAIL: estudogcp-261420@appspot.gserviceaccount.com 
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-a	
  GKE_CLUSTER: apiestudo-82
  IMAGE: apiestudo

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: estudogcp-261420@appspot.gserviceaccount.com 
        service_account_key: "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCW+cZsnfuoHO25\naj2ptVYdKkaYqzLDaM4xEkJ8ArHf5en5p1KQiu20cyXsZ2OVW7XdlgeBtjoTIsAE\nyX8fpNUWjVQH9T2DU/a6F6Zv8SO6COAPl2WEINsUFEItNaagiiV9a3c9jMoy4u+l\nCqErKrzLyj26rDG9zeZv6ae1uxeg544Mbaa/RMuC8Ah7aeBYpJm0PLarS+J/mQtr\nmOEZZ24o1TYTjykVH83EiNTWRIR6sG2UzHqhyDjlIzghsSuj8I4bhlSTh1+sXbOC\nSnlPP8XpDJHZ4huepnWD4CCbt6XW72Q05VCcU6lSPt3PUAnDVP4PgxeF1PNJcFX7\nEBFAKD1PAgMBAAECggEAM02BLdupboEWDxGZDpg+QP7iqnJSd7CfkHFCAl3wD8NS\n9LD1D4UGLXGLi3++iTx22mtm9Z70sRf35CiMeDZM6rLvwRyG4J+hka8Dsbphh5AI\ng4PQzUtU5sfTjQVUL+2Bu9LO3C2BcDVJde3cwoxtR1rcCxkEdhkHmzPs94YyC0ze\ngZ0NaH45PqCNI8kaQOHHOvDQ5wd8/FgM2geu1RDdHaPZh/Cesxg5wforsTJ2Yt76\nbvELZrJMwAKUOh9eFR3+JeluFXVNmPAnSXhaWVO45DHYgyL8S9bkqngFuvnNm8lQ\nGlTC2QlNLjrsS/86b0yHUbP/rXLqwNfOGIk7+sKT0QKBgQDJ5KXVc1rZNGVitf/u\nQIpKmOTtqIcafEzKdAPSSNbfKt6PfY5a0x/gfkxN6JiHGOPYL1t20Uucoc3wWzJ9\nbnjY9g60XmHNbbOYp4bFikG1/dmQgkLnkjt68qMmOr0wW+9FJvzeclPvCJi8Y4AZ\nA433JtECKxdv6OwjiLntU6pOuwKBgQC/b9CoPZhPXOPah9eiHDHZneIBnYllgA5H\ny12As43X9VS29SjNS6UmePo53wxNU/FyCaVoDmdfnD7Q3C37Mt5qOJ+Pe7Y9IYPq\nO9uXbQG3FYoV3I8jsVasG5xLbp377x2BKMBEk3pbXXFQrd6gXjemk2iRErQ5AVod\nD7zVUbCkfQKBgEcfLChQlc10fs7STJFy3QTAbc0nFEkJRsf/LKV0kXVWlca4tWBb\nhZxBAcJkUO8unn022aK2wkswWOr2RYgYVawgqjdyFEQZBC6fvYNzXAivn2gf60/G\nnPuH5F+AS8twZ47V2DjIz7aiMaQT7Tlini1V2EVKRtxekmlGLjFjytgnAoGAbGor\nlgwEBPYLSEhkMzead661Psrz89qYu8oNMwT80I/soQyoRdOQPQCIXVvXQLfIZhfW\nZ964Zmo7HNeE5t0BHtDgdEbQh0BCz9WEX/Zo4UG+iPD203TsK94bHpEPwYzCfdIR\nSQToZ3O8577/9HxHMfwLXRVloV8FpK2z+G8iBZUCgYAU7dk2mmmM2Hdwv/3WQOrb\nINGIRX8TIJkJoY3QiTIa3Op2qOLQsHQaNpxZxsWgVcY+wDvJq1aMnkYBqA+4Jj9t\n9gxbwpKwazFgf+RXWcoQQrm62BBRKkN7ajkF8M3Bo1JAflcIvx0DtbqtK4dAWS51\ngXBHOrgVyhNJKRP7Je6Kzw==\n-----END PRIVATE KEY-----\n" 

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      run: |        
        docker build -t gcr.io/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        ./kustomize edit set image gcr.io/$GKE_PROJECT/$IMAGE:${GITHUB_SHA}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/gke-test
        kubectl get services -o wide
